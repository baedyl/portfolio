{"version":3,"sources":["me.jpg","components/NavBar.js","components/Profile.js","components/Home.js","components/About.js","components/Dev404.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","elems","items","map","item","react_default","a","createElement","react_router_dom","className","to","link","title","for","type","name","id","Profile","src","ProfileImage","alt","Home","components_Profile","About","bio","href","target","Dev404","App","basename","components_NavBar","num","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+QCgDzBC,eA1CA,SAACC,GACZ,IAAMC,EACFD,EAAME,MAAMC,IAAI,SAACC,GAAD,OACZC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,GAAKN,EAAKO,MAC9BP,EAAKQ,UAIvB,OACIP,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOM,IAAI,aAAX,UACAR,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WAAWC,KAAK,YAAYC,GAAG,cAC3CX,EAAAC,EAAAC,cAAA,UACMN,wBCHPgB,SAZC,WACZ,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,GAAG,UACzBL,EAAAC,EAAAC,cAAA,OAAKW,IAAMC,IAAeV,UAAU,kBAAkBW,IAAI,uBCC3DC,EARF,WACT,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACe,EAAD,QCyBGC,SA1BD,WACV,OACIlB,EAAAC,EAAAC,cAAA,OAAKiB,KAAG,GACJnB,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,4BACoBF,EAAAC,EAAAC,cAAA,qCADpB,wNAKAF,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,WAEJF,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,wCACgCF,EAAAC,EAAAC,cAAA,KAAGkB,KAAK,sBAAsBC,OAAO,SAArC,QADhC,KAEIrB,EAAAC,EAAAC,cAAA,KAAGkB,KAAK,qBAAqBC,OAAO,SAApC,UAFJ,2HAG4DrB,EAAAC,EAAAC,cAAA,KAAGkB,KAAK,wBAAwBC,OAAO,SAAvC,YAH5D,OAIIrB,EAAAC,EAAAC,cAAA,KAAGkB,KAAK,mBAAmBC,OAAO,SAAlC,wBAJJ,gHCVDC,EANA,WACX,OACItB,EAAAC,EAAAC,cAAA,0DC+BOqB,MA1Bf,WASE,OACEvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYqB,SAAS,KACnBxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACuB,EAAD,CAAQ5B,MAXM,CAClB,CAAC6B,IAAK,EAAGnB,MAAO,OAAQD,KAAM,KAC9B,CAACoB,IAAK,EAAGnB,MAAO,QAASD,KAAM,UAC/B,CAACoB,IAAK,EAAGnB,MAAO,WAAYD,KAAM,aAClC,CAACoB,IAAK,EAAGnB,MAAO,UAAWD,KAAM,YACjC,CAACoB,IAAK,EAAGnB,MAAO,OAAQD,KAAM,YAO1BN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWd,IACjChB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWZ,IAChClB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWR,IACnCtB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWR,IAC/BtB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWR,QCfxBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c285ab3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.370b5754.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style/NavBar.css';\n\n\nconst NavBar = (props) => {\n    const elems = \n        props.items.map((item) => \n            <li>\n                <Link className=\"navLink\" to={ item.link }>\n                    { item.title }\n                </Link>\n            </li>\n        );\n    return(\n        <header>\n            <nav>\n                <label for=\"nav-input\">☰</label>\n                <input type=\"checkbox\" name=\"nav-input\" id=\"nav-input\"></input>\n                <ul>\n                    { elems }\n                </ul>   \n            </nav>\n        </header>\n        \n    );\n}\n\n/*\nconst elems = \n        props.items.map((item) => \n            <Link to={ item.link }>\n                { item.title }\n            </Link>\n        );\n\n<div className=\"topnav\" id=\"myTopNav\">\n    { elems }\n    <a href=\"#responsive\" className=\"icon\" onClick={ responsiveNavBar }>\n        <i class=\"fa fa-bars\"></i>\n    </a>\n</div>\n\n<label for=\"nav-input\">☰</label>\n\t\t\t<input type=\"checkbox\" name=\"nav-input\" id=\"nav-input\">\n*/\n\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ProfileImage from '../../src/me.jpg';\nimport './style/Profile.css';\n\nconst Profile = () => {\n    return(\n        <div>\n            <Link className=\"navLink\" to=\"/about\">\n                <img src={ ProfileImage } className=\"Profile-picture\" alt=\"Portrait of me\" />\n            </Link>\n            \n        </div>\n        \n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\n\nconst Home = () => {\n    return(\n        <div>\n            <Profile />\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport Profile from '../components/Profile';\n\nimport './style/About.css';\n\nconst About = () => {\n    return(\n        <div bio>\n            <Profile></Profile>\n            <p>\n                Hi, I'm Emma. A <b>Full Stack Web Developer</b>. I care about building robust software and, \n                create intuitive interactions. To do that, I make use of the set of skills I acquired along my journey \n                (and a sprinkle of creativity) in order to brings ideas to life.\n            </p>\n            <section>\n                <p></p>\n            </section>\n            <section>\n                <p>\n                    I am a recent graduate from <a href=\"http://www.emsi.ma/\" target=\"blank\">EMSI</a> &\n                    <a href=\"http://unice.fr/en\" target=\"blank\"> UNICE</a> (Masters MIAGE) where I studied Computer Science and Networks. \n                    I had the opportunity to work with a few companies like <a href=\"https://creasouk.com/\" target=\"blank\">Creasouk</a> and \n                    <a href=\"www.koerigg.com/\" target=\"blank\"> Koerigg Enterprises</a>, where I gained\n                    experience in a production environment and general software development best practices.\n                </p>\n            </section>\n        </div>\n        \n    );\n}\n\nexport default About;","import React from 'react';\n\nconst Dev404 = () => {\n    return(\n        <h2>This part is currently under development :D</h2>\n    );\n}\n\nexport default Dev404;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Dev404 from './components/Dev404';\n\nfunction App() {\n  const navBarItems = [\n    {num: 1, title: \"Home\", link: \"/\"},\n    {num: 2, title: \"About\", link: \"/about\"},\n    {num: 3, title: \"Projects\", link: \"/projects\"},\n    {num: 4, title: \"Contact\", link: \"/contact\"},\n    {num: 5, title: \"Blog\", link: \"/blog\"}\n  ];\n\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <NavBar items={ navBarItems } />\n        <header className=\"App-header\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/projects\" component={Dev404} />\n          <Route path=\"/blog\" component={Dev404} />\n          <Route path=\"/contact\" component={Dev404} />\n        </header>\n      </div>\n    </HashRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}